<?php

namespace ProcessWire;

/**
 * CabinAnalytics
 * 
 * Add a page to your ProcessWire admin area which
 * embeds a public dashboard from Cabin Analytics
 * 
 * 
 */



class CabinAnalytics extends Process implements Module, ConfigurableModule
{

  public static function getModuleinfo()
  {
    return [
      'title' => 'CabinAnalytics',
      'summary' => 'Add a page to your ProcessWire admin area with an embeded public dashboard from Cabin Analytics',
      'author' => 'Stephen at millipedia.com',
      'version' => 1,

      'autoload' => false,
      'singular' => true,
      'permanent' => false,

      'permission' => 'cabin-analytics',
      'permissions' => array('cabin-analytics' => 'View Cabin Analytics'),

      'icon' => 'bar-chart',
      'requires' => [
        'PHP>=7.0.0',
        'ProcessWire>=3.0.0',
      ],

      // page that you want created to execute this module
      'page' => [
        // your page will be online at /processwire/yourname/
        'name' => 'analytics',
        // page title for this admin-page
        'title' => 'Analytics',
      ],
    ];
  }

  public $cabin_dashboard_code;


  static protected $defaults = array(
    'ca_user_code' => ''
  );

  /**
   * 
   */
  public function __construct()
  {

    parent::__construct(); // remember to call the parent

    // populate defaults, which will get replaced with actual
    // configured values before the init/ready methods are called
    $this->setArray(self::$defaults);
  }



  public static function getModuleConfigInputfields(array $data)
  {
    $inputfields = new InputfieldWrapper();
    $data = array_merge(self::$defaults, $data);

    $f = wire('modules')->get('InputfieldText');
    $f->attr('name', 'ca_user_code');
    $f->label = 'Cabin dashboard user code';
	$f->notes = 'This is the unique dashboard code at the end of your withcabin.com/public/ dashboard URL.';
    $f->required = true;
    $f->attr('value', $data['ca_user_code']);
    $inputfields->add($f);

    return $inputfields;
  }

  public function ___execute()
  {


    $admin_page_markup = '';

    if ($this->cabin_dashboard_code == '') {

      $admin_page_markup .= "<div class='error'>Please ensure you have set your Cabin dashboard ID in the module config.</div>";
    } else {

      $dashboard_url = 'https://withcabin.com/public/' . $this->cabin_dashboard_code;
      $style = 'width:1px;min-width:100%;height:1000px;max-width:1100px';
      $iframe = "<iframe id='cabin_analytics_iframe' src='{$dashboard_url}' style='{$style}' frameborder='0' ></iframe>";

      $admin_page_markup .= "<div class='wrapper'>{$iframe}</div>";

      $admin_page_markup .= '<p>Open your <a href="' . $dashboard_url . '" target="_new"> your analytics dashboard in a new tab.</a></p>.';
    }




    return $admin_page_markup;
  }

  /**
   * Init module
   */
  public function init()
  {

    parent::init();
    $conf = $this->getModuleInfo();
    $version = (int) $conf['version'];

    // get our config field values
    $cabin_dashboard_code = $this->get('ca_user_code');
    $this->cabin_dashboard_code = $cabin_dashboard_code;
  }
}
